#!/usr/bin/perl

use strict;
use warnings;
use LWP::UserAgent;
use JSON;
use URI::Encode qw(uri_encode);

my $nagios_url = $ARGV[0];
my $slack_url  = $ARGV[1];
my $channel    = $ARGV[2];
my $botname    = $ARGV[3];

my $icons = {
    CRITICAL        => ':exclamation:',
    DOWN            => ':exclamation:',
    WARNING         => ':warning:',
    OK              => ':white_check_mark:',
    UP              => ':white_check_mark:',
    UNKNOWN         => ':question:',
    ACKNOWLEDGEMENT => ':heart:',
};

my $icon = ':white_medium_square:';
my $msg = '';
my $msg_prefix = '';
my $type = $ENV{NAGIOS_SERVICEATTEMPT} ? 'service' : 'host';

if ($type eq 'service') {
    $icon = $$icons{$ENV{NAGIOS_SERVICESTATE}} if defined($$icons{$ENV{NAGIOS_SERVICESTATE}});
    $msg = 'MESSAGE: ' . $ENV{NAGIOS_SERVICEOUTPUT};
    $msg_prefix = 'SERVICE: ' . $ENV{NAGIOS_SERVICEDISPLAYNAME};
} else {
    $icon = $$icons{$ENV{NAGIOS_HOSTSTATE}} if defined ($ENV{NAGIOS_HOSTSTATE});
    $msg_prefix = 'is ' . $ENV{NAGIOS_HOSTSTATE};
}
# override if it's an Ack
if($ENV{NAGIOS_NOTIFICATIONTYPE} eq 'ACKNOWLEDGEMENT') {
    $icon = $$icons{ACKNOWLEDGEMENT};
    $msg =  sprintf(
        'ACKNOWLEDGED BY: %s  COMMENT: %s',
        $ENV{NAGIOS_NOTIFICATIONAUTHOR},
        $ENV{NAGIOS_NOTIFICATIONCOMMENT}
    );
}

my $url = sprintf(
    '%s/cgi-bin/status.cgi?navbarsearch=1&host=%s',
    $nagios_url,
    $ENV{NAGIOS_HOSTNAME}
);

my $data = {
    channel => $channel,
    username => $botname,
    text => sprintf(
        "%s HOST: %s  %s  %s  <%s|See Nagios>",
        $icon,
        $ENV{NAGIOS_HOSTNAME},
        $msg_prefix,
        $msg,
        $url,
    ),
};

my $req = HTTP::Request->new( 'POST', $slack_url);
$req->header( 'Content-Type' => 'application/x-www-form-urlencoded' );
$req->content( 'payload=' . uri_encode(encode_json($data), { encode_reserved => 1 }));

my $ua = LWP::UserAgent->new;
my $resp = $ua->request( $req );

if(!$resp->is_success) {
    die(sprintf("%s: %s\n\n%s\n", $resp->code, $resp->message, $resp->decoded_content));
}
